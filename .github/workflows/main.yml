name: Compile and release

on:
  push:
    branches:
      - master

env:
  PLUGIN_NAME: mitm
  SCRIPTS_PATH: addons/sourcemod/scripting

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sm-version: [ '1.12.x' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare include directory
        run: mkdir -p ${{ env.SCRIPTS_PATH }}/include

      - name: Download repositories
        run: |
          declare -A repos=(
            ["https://github.com/TF2-DMB/CBaseNPC"]="addons/sourcemod/scripting/include"
            ["https://github.com/Scags/SM-Memory"]="pawn/sourcemod/scripting/include"
          )

          for repo in "${!repos[@]}"; do
            repo_name=$(basename "$repo")
            include_path="${repos[$repo]}"
            echo "Cloning $repo..."
            git clone --depth 1 "$repo" "$repo_name"
          
            find "$repo_name" -type f -name "*.inc" | while read -r file; do
              relative_path="${file#*/scripting/include/}"
              mkdir -p "${{ env.SCRIPTS_PATH }}/include/$(dirname "$relative_path")"
              mv "$file" "${{ env.SCRIPTS_PATH }}/include/$relative_path"
            done

            rm -rf "$repo_name"
          done

      - name: Download include files
        run: |
          includes=(
            "https://raw.githubusercontent.com/DoctorMcKay/sourcemod-plugins/master/scripting/include/morecolors.inc"
            "https://raw.githubusercontent.com/Mikusch/PluginStateManager/master/addons/sourcemod/scripting/include/pluginstatemanager.inc"
            "https://raw.githubusercontent.com/haxtonsale/LoadSoundScript/refs/heads/master/sourcepawn/loadsoundscript.inc"
            "https://raw.githubusercontent.com/nosoop/SM-TFUtils/refs/heads/master/scripting/include/tf2utils.inc"
            "https://raw.githubusercontent.com/FlaminSarge/tf2attributes/refs/heads/master/scripting/include/tf2attributes.inc"
            "https://raw.githubusercontent.com/nosoop/SM-TFEconData/refs/heads/master/scripting/include/tf_econ_data.inc"
            "https://raw.githubusercontent.com/FortyTwoFortyTwo/VScript/refs/heads/main/scripting/include/vscript.inc"
            "https://raw.githubusercontent.com/nosoop/SMExt-SourceScramble/refs/heads/master/scripting/include/sourcescramble.inc"
          )

          mkdir -p "${{ env.SCRIPTS_PATH }}/include"

          for url in "${includes[@]}"; do
            echo "Downloading $url"
            curl -sSL -O --output-dir "${{ env.SCRIPTS_PATH }}/include" "$url"
          done

      - name: Setup SourcePawn Compiler ${{ matrix.sm-version }}
        id: setup_sp
        uses: rumblefrog/setup-sp@master
        with:
          version: ${{ matrix.sm-version }}
          version-file: ${{ env.SCRIPTS_PATH }}/${{ env.PLUGIN_NAME }}.sp
          define-name: PLUGIN_VERSION

      - name: Compile plugin
        run: |
          mkdir -p ../plugins
          spcomp -v2 -E -i "include" -o "../plugins/${{ env.PLUGIN_NAME }}.smx" "${{ env.PLUGIN_NAME }}.sp"
          echo "=== OUT FILES ==="
          ls ../plugins
          echo "=== VERSION ==="
          echo ${{ steps.setup_sp.outputs.plugin-version }}
        working-directory: ${{ env.SCRIPTS_PATH }}

      - name: Install zip utility
        uses: montudor/action-zip@v1

      - name: Zip output
        run: |
          zip -qq -r ${{ github.event.repository.name }}.zip addons/sourcemod

      - name: List build outputs
        run: |
          echo "::group::Directory contents"
          ls -R
          echo "::endgroup::"
          echo "::group::Zip contents"
          unzip -l ${{ github.event.repository.name }}.zip
          echo "::endgroup::"

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.setup_sp.outputs.plugin-version }}
          artifacts: ./${{ github.event.repository.name }}.zip
          draft: true
          allowUpdates: true
          updateOnlyUnreleased: true
          skipIfReleaseExists: true
